version: '3'
services:
  postgres:
    healthcheck:
      test: pg_isready -U ${DB_USER}
      interval: 5s 
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - api
    ports:
      - 5432:5432
    image: docker.io/postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER} 
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    networks:
      - api
    ports:
      - 6379:6379
    image:
      redis

  pelias:
    networks:
      - api
    image: pelias/parser

  meshdb:
    depends_on:
      postgres:
        condition: service_healthy
      redis:
         condition: service_healthy
    healthcheck:
      test: curl http://127.0.0.1:8081/api/v1
      interval: 2s
      timeout: 1s
      retries: 3
      start_period: 2s
    networks:
      - api
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - static_files:/opt/meshdb/static

  nginx:
    depends_on:
      meshdb:
        condition: service_healthy
    networks:
      - api
    expose:
      - 80
    image: nginx
    labels:
      - "traefik.http.routers.meshdb.rule=Host(`meshdb.meshsvc-grand.mesh.nycmesh.net`)"
      - traefik.enable=true
      - traefik.port=80
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_files:/var/www/html/static

volumes:
  postgres_data:
  static_files:

networks:
  api:
    external: true
    name: traefik-net
