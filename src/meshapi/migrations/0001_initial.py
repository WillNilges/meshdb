# Generated by Django 4.2.10 on 2024-03-05 04:39

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Building",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("bin", models.IntegerField(blank=True, null=True)),
                ("building_status", models.TextField(choices=[("Inactive", "Inactive"), ("Active", "Active")])),
                ("street_address", models.TextField(blank=True, null=True)),
                ("city", models.TextField(blank=True, null=True)),
                ("state", models.TextField(blank=True, null=True)),
                ("zip_code", models.TextField(blank=True, null=True)),
                ("invalid", models.BooleanField(default=False)),
                ("address_truth_sources", models.TextField()),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                ("altitude", models.FloatField(blank=True, null=True)),
                (
                    "primary_nn",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(101),
                            django.core.validators.MaxValueValidator(8192),
                        ],
                    ),
                ),
                ("node_name", models.TextField(blank=True, default=None, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Device",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.TextField()),
                ("device_name", models.TextField()),
                (
                    "status",
                    models.TextField(
                        choices=[("Abandoned", "Abandoned"), ("Active", "Active"), ("Potential", "Potential")]
                    ),
                ),
                (
                    "network_number",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(101),
                            django.core.validators.MaxValueValidator(8192),
                        ],
                    ),
                ),
                ("install_date", models.DateField(blank=True, default=None, null=True)),
                ("abandon_date", models.DateField(blank=True, default=None, null=True)),
                ("notes", models.TextField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.TextField()),
                ("primary_email_address", models.EmailField(max_length=254, null=True)),
                ("stripe_email_address", models.EmailField(blank=True, default=None, max_length=254, null=True)),
                (
                    "additional_email_addresses",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.EmailField(max_length=254), blank=True, default=list, null=True, size=None
                    ),
                ),
                ("phone_number", models.TextField(blank=True, default=None, null=True)),
                ("slack_handle", models.TextField(blank=True, default=None, null=True)),
                ("invalid", models.BooleanField(default=False)),
                ("contact_notes", models.TextField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Sector",
            fields=[
                (
                    "device_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="meshapi.device",
                    ),
                ),
                ("radius", models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                (
                    "azimuth",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(360),
                        ]
                    ),
                ),
                (
                    "width",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(360),
                        ]
                    ),
                ),
                ("ssid", models.TextField(blank=True, default=None, null=True)),
            ],
            bases=("meshapi.device",),
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("status", models.TextField(choices=[("Dead", "Dead"), ("Planned", "Planned"), ("Active", "Active")])),
                (
                    "type",
                    models.TextField(
                        blank=True,
                        choices=[("Standard", "Standard"), ("VPN", "Vpn"), ("MMWave", "Mmwave"), ("Fiber", "Fiber")],
                        default=None,
                        null=True,
                    ),
                ),
                ("install_date", models.DateField(blank=True, default=None, null=True)),
                ("abandon_date", models.DateField(blank=True, default=None, null=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("notes", models.TextField(blank=True, default=None, null=True)),
                (
                    "from_device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="links_from", to="meshapi.device"
                    ),
                ),
                (
                    "to_device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="links_to", to="meshapi.device"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Install",
            fields=[
                ("install_number", models.AutoField(db_column="install_number", primary_key=True, serialize=False)),
                (
                    "status",
                    models.TextField(
                        choices=[
                            ("Request Received", "Request Received"),
                            ("Pending", "Pending"),
                            ("Blocked", "Blocked"),
                            ("Active", "Active"),
                            ("Inactive", "Inactive"),
                            ("Closed", "Closed"),
                            ("NN Reassigned", "Nn Reassigned"),
                        ]
                    ),
                ),
                ("ticket_id", models.IntegerField(blank=True, null=True)),
                ("request_date", models.DateField()),
                ("install_date", models.DateField(blank=True, default=None, null=True)),
                ("abandon_date", models.DateField(blank=True, default=None, null=True)),
                ("unit", models.TextField(blank=True, default=None, null=True)),
                ("roof_access", models.BooleanField(default=False)),
                ("referral", models.TextField(blank=True, default=None, null=True)),
                ("notes", models.TextField(blank=True, default=None, null=True)),
                ("diy", models.BooleanField(blank=True, default=None, null=True, verbose_name="Is DIY?")),
                (
                    "building",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="installs", to="meshapi.building"
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="installs", to="meshapi.member"
                    ),
                ),
            ],
            options={
                "permissions": [("assign_nn", "Can assign an NN to install")],
            },
        ),
        migrations.AddField(
            model_name="device",
            name="powered_by_install",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="powers", to="meshapi.install"
            ),
        ),
    ]
