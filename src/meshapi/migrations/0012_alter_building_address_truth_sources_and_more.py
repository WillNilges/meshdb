# Generated by Django 4.2.10 on 2024-03-09 19:17

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("meshapi", "0011_rename_secondary_emails_member_additional_email_addresses_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="building",
            name="address_truth_sources",
            field=models.TextField(
                help_text="A comma separated list of strings that answers the question: How did we determine the content of the street address, city, state, and ZIP fields? This is useful in understanding the level of validation applied to spreadsheet imported data. Possible values are: OSMNominatim, OSMNominatimZIPOnly, NYCPlanningLabs, PeliasStringParsing, ReverseGeocodeFromCoordinates. Check the import script for details"
            ),
        ),
        migrations.AlterField(
            model_name="building",
            name="altitude",
            field=models.FloatField(
                blank=True, help_text='Building rooftop altitude in "absolute" meters above sea level', null=True
            ),
        ),
        migrations.AlterField(
            model_name="building",
            name="bin",
            field=models.IntegerField(
                blank=True,
                help_text="NYC DOB Identifier for this building",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="building",
            name="building_status",
            field=models.TextField(
                choices=[("Inactive", "Inactive"), ("Active", "Active")],
                help_text="Current building status. Active indicates this is a building with active mesh equipment, regardless of if there are any members connected via active installs",
            ),
        ),
        migrations.AlterField(
            model_name="building",
            name="city",
            field=models.TextField(
                blank=True,
                help_text='The name of the borough this building is in for buildings within NYC, "New York" for Manhattan to match street addresses. The actual city name for anything outside NYC',
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="building",
            name="invalid",
            field=models.BooleanField(
                default=False,
                help_text="Is the location of this building specified sufficiently enough to be considered valid? This means the building must have a non-null street address, city, state, and zip. Some old spreadsheet imports are missing some of this information, and this field is useful for filtering these out",
            ),
        ),
        migrations.AlterField(
            model_name="building",
            name="latitude",
            field=models.FloatField(help_text="Building latitude in decimal degrees"),
        ),
        migrations.AlterField(
            model_name="building",
            name="longitude",
            field=models.FloatField(help_text="Building longitude in decimal degrees"),
        ),
        migrations.AlterField(
            model_name="building",
            name="node_name",
            field=models.TextField(
                blank=True,
                default=None,
                help_text="The colloquial name of this node used among mesh volunteers, if applicable",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="building",
            name="notes",
            field=models.TextField(
                blank=True,
                help_text="A free-form text description of this building, to track any additional information. For Buidings imported from the spreadsheet, this starts with a formatted block of information about the import processand original spreadsheet data. However this structure can be changed by admins at any time and should not be relied onby automated systems. ",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="building",
            name="primary_nn",
            field=models.IntegerField(
                blank=True,
                help_text='The primary network number of this building, for nearly all buildings this will be the same value attached to all installs. In rare cases where buildings have more that one NN, this is the "primary" one, indicating what this building should be referred to as (this should match the core router)',
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(101),
                    django.core.validators.MaxValueValidator(8192),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="building",
            name="state",
            field=models.TextField(
                blank=True,
                help_text='The 2 letter abreviation of the US State this building is contained within, e.g. "NY" or "NJ"',
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="building",
            name="street_address",
            field=models.TextField(
                blank=True,
                help_text="Line 1 only of the address of this building: i.e. <house num> <street>",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="building",
            name="zip_code",
            field=models.TextField(
                blank=True, help_text="The five digit ZIP code this building is contained within", null=True
            ),
        ),
        migrations.AlterField(
            model_name="install",
            name="abandon_date",
            field=models.DateField(
                blank=True,
                default=None,
                help_text="The date this install was abandoned, unplugged, or disassembled",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="install",
            name="building",
            field=models.ForeignKey(
                help_text="The building where the install is located",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="installs",
                to="meshapi.building",
            ),
        ),
        migrations.AlterField(
            model_name="install",
            name="diy",
            field=models.BooleanField(
                blank=True,
                default=None,
                help_text="Was this install conducted by the member themselves? If not, it was done by a volunteer installer on their behalf",
                null=True,
                verbose_name="Is DIY?",
            ),
        ),
        migrations.AlterField(
            model_name="install",
            name="install_date",
            field=models.DateField(
                blank=True,
                default=None,
                help_text="The date this install was completed and deployed to the mesh",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="install",
            name="install_status",
            field=models.TextField(
                choices=[
                    ("Request Received", "Request Received"),
                    ("Pending", "Pending"),
                    ("Blocked", "Blocked"),
                    ("Active", "Active"),
                    ("Inactive", "Inactive"),
                    ("Closed", "Closed"),
                    ("NN Reassigned", "Nn Reassigned"),
                ],
                help_text="The current status of this install",
            ),
        ),
        migrations.AlterField(
            model_name="install",
            name="member",
            field=models.ForeignKey(
                help_text="The member this install is associated with",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="installs",
                to="meshapi.member",
            ),
        ),
        migrations.AlterField(
            model_name="install",
            name="network_number",
            field=models.IntegerField(
                blank=True,
                help_text="The network number associated with this install, this corresponds to the static IP address and OSPF ID of the router this install utilizes, the DHCP range it receives an address from, etc.",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(101),
                    django.core.validators.MaxValueValidator(8192),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="install",
            name="notes",
            field=models.TextField(
                blank=True,
                default=None,
                help_text="A free-form text description of this Install, to track any additional information. For Installs imported from the spreadsheet, this starts with a formatted block of information about the import processand original spreadsheet data. However this structure can be changed by admins at any time and should not be relied onby automated systems. ",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="install",
            name="referral",
            field=models.TextField(
                blank=True,
                default=None,
                help_text='The "How did you hear about us?" information provided to us when the member submitted the join form',
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="install",
            name="request_date",
            field=models.DateField(help_text="The date that this install request was received"),
        ),
        migrations.AlterField(
            model_name="install",
            name="roof_access",
            field=models.BooleanField(
                default=False,
                help_text="True if the member indicated they had access to the roof when they submitted the join form",
            ),
        ),
        migrations.AlterField(
            model_name="install",
            name="ticket_id",
            field=models.IntegerField(
                blank=True,
                help_text="The ID of the OSTicket used to track communications with the member about this install",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="install",
            name="unit",
            field=models.TextField(
                blank=True, default=None, help_text="Line 2 of this install's mailing address", null=True
            ),
        ),
        migrations.AlterField(
            model_name="link",
            name="abandon_date",
            field=models.DateField(
                blank=True,
                default=None,
                help_text="The date this link was powered off, disassembled, or abandoned",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="link",
            name="description",
            field=models.TextField(
                blank=True,
                default=None,
                help_text='A short description of "where to where" this link connects in human readable language',
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="link",
            name="from_building",
            field=models.ForeignKey(
                help_text="The building on one side of this network link, from/to are not meaningful except to disambiguate",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="links_from",
                to="meshapi.building",
            ),
        ),
        migrations.AlterField(
            model_name="link",
            name="install_date",
            field=models.DateField(blank=True, default=None, help_text="The date this link was created", null=True),
        ),
        migrations.AlterField(
            model_name="link",
            name="notes",
            field=models.TextField(
                blank=True,
                default=None,
                help_text="A free-form text description of this Link, to track any additional information.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="link",
            name="status",
            field=models.TextField(
                choices=[("Dead", "Dead"), ("Planned", "Planned"), ("Active", "Active")],
                help_text="The current status of this link",
            ),
        ),
        migrations.AlterField(
            model_name="link",
            name="to_building",
            field=models.ForeignKey(
                help_text="The building on one side of this network link, from/to are not meaningful except to disambiguate",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="links_to",
                to="meshapi.building",
            ),
        ),
        migrations.AlterField(
            model_name="link",
            name="type",
            field=models.TextField(
                blank=True,
                choices=[("Standard", "Standard"), ("VPN", "Vpn"), ("MMWave", "Mmwave"), ("Fiber", "Fiber")],
                default=None,
                help_text="The technology used for this link 5Ghz, 60Ghz, fiber, etc.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="additional_email_addresses",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.EmailField(max_length=254),
                blank=True,
                default=list,
                help_text="Any additional email addresses associated with this member",
                null=True,
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="contact_notes",
            field=models.TextField(
                blank=True,
                default=None,
                help_text="A free-form text description of how to contact this member, to track any additional information. For Members imported from the spreadsheet, this starts with a formatted block of information about the import processand original spreadsheet data. However this structure can be changed by admins at any time and should not be relied onby automated systems. ",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="invalid",
            field=models.BooleanField(
                default=False,
                help_text="Is there enough information about how to contact this member for this object to be considered valid? This mostly means the member must have a non-null primary email address. Some old spreadsheet imports are missing this information, and this field is useful for filtering these out",
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="name",
            field=models.TextField(help_text='Member full name in the format: "First Last"'),
        ),
        migrations.AlterField(
            model_name="member",
            name="phone_number",
            field=models.TextField(
                blank=True, default=None, help_text="A contact phone number for this member", null=True
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="primary_email_address",
            field=models.EmailField(
                help_text="Primary email address used to contact the member", max_length=254, null=True
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="slack_handle",
            field=models.TextField(blank=True, default=None, help_text="The member's slack handle", null=True),
        ),
        migrations.AlterField(
            model_name="member",
            name="stripe_email_address",
            field=models.EmailField(
                blank=True,
                default=None,
                help_text="Email address used by the member to donate via Stripe, if different to their primary email",
                max_length=254,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="sector",
            name="abandon_date",
            field=models.DateField(
                blank=True,
                default=None,
                help_text="The date this Sector was powered off, disassembled, or abandoned",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="sector",
            name="azimuth",
            field=models.IntegerField(
                help_text="The compass heading that this sector is pointed towards",
                validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)],
            ),
        ),
        migrations.AlterField(
            model_name="sector",
            name="building",
            field=models.ForeignKey(
                help_text="The building this sector is installed on",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="sectors",
                to="meshapi.building",
            ),
        ),
        migrations.AlterField(
            model_name="sector",
            name="device_name",
            field=models.TextField(
                help_text="The name of the device/antenna being used to provide this sector of coverage"
            ),
        ),
        migrations.AlterField(
            model_name="sector",
            name="install_date",
            field=models.DateField(blank=True, default=None, help_text="The date this Sector was installed", null=True),
        ),
        migrations.AlterField(
            model_name="sector",
            name="name",
            field=models.TextField(help_text="The name of the hub sector is installed on"),
        ),
        migrations.AlterField(
            model_name="sector",
            name="notes",
            field=models.TextField(
                blank=True,
                default=None,
                help_text="A free-form text description of this Sector, to track any additional information. The structure of this data can be changed by admins at any time and should not be relied on by automated systems. ",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="sector",
            name="radius",
            field=models.FloatField(
                help_text="The radius to display this sector on the map (in km)",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="sector",
            name="ssid",
            field=models.TextField(
                blank=True, default=None, help_text="The SSID being broadcast by this device", null=True
            ),
        ),
        migrations.AlterField(
            model_name="sector",
            name="status",
            field=models.TextField(
                choices=[("Abandoned", "Abandoned"), ("Active", "Active"), ("Potential", "Potential")],
                help_text="The current status of this Sector",
            ),
        ),
        migrations.AlterField(
            model_name="sector",
            name="width",
            field=models.IntegerField(
                help_text="The approximate width of the beam this sector produces",
                validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)],
            ),
        ),
    ]
