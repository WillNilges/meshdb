"""
Django settings for meshdb project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Log users out automatically after 2 days
SESSION_COOKIE_AGE = 172800  # Expire sessions after 2 Days. "1209600(2 weeks)" by default
SESSION_SAVE_EVERY_REQUEST = True  # "False" by default

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = "DEBUG" in os.environ

ALLOWED_HOSTS = [
    "db.grandsvc.mesh.nycmesh.net",
    "db.grandsvc.mesh",
    "db.mesh.nycmesh.net",
    "db.mesh",
    "db.nycmesh.net",
    "127.0.0.1",
    "meshdb",
    "nginx",
    "host.docker.internal",
]

# FIXME: Shit works, but also doesn't(?) work with the ^ as the first character
# r"^https://\w+\.nycmesh\.net$",
# r"^http://\w+\.nycmesh\.net$",
CORS_ALLOWED_ORIGINS = [
    "http://forms.grandsvc.mesh.nycmesh.net",
    "https://forms.grandsvc.mesh.nycmesh.net",
    "http://127.0.0.1:3000",
    "http://localhost:3000",
    "http://127.0.0.1:80",
    "http://localhost:80",
]

CSRF_TRUSTED_ORIGINS = [
    "http://db.grandsvc.mesh.nycmesh.net",
    "https://db.grandsvc.mesh.nycmesh.net",
    "http://db.grandsvc.mesh",
    "https://db.grandsvc.mesh",
    "http://db.mesh.nycmesh.net",
    "https://db.mesh.nycmesh.net",
    "http://db.mesh",
    "https://db.mesh",
    "http://db.nycmesh.net",
    "https://db.nycmesh.net",
    "http://127.0.0.1:8080",
    "http://meshdb:8081",
    "http://nginx:8080",
]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_webhook",
    "rest_framework",
    "rest_framework.authtoken",
    "meshapi",
    "meshweb",
    "corsheaders",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "meshdb.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "meshdb.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("DB_NAME"),
        "USER": os.environ.get("DB_USER"),
        "PASSWORD": os.environ.get("DB_PASSWORD"),
        "HOST": os.environ.get("DB_HOST"),
        "PORT": os.environ.get("DB_PORT", 5432),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

STATIC_ROOT = BASE_DIR / "static"

STATICFILES_DIRS = [
    # BASE_DIR / "static", # The STATICFILES_DIRS setting should not contain the STATIC_ROOT setting
    "/var/www/static/",
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 100,
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.DjangoModelPermissions",
    ],
}

# Allow-list models which the admin can select to send webhooks for
DJANGO_WEBHOOK = dict(
    MODELS=[
        "meshapi.Building",
        "meshapi.Member",
        "meshapi.Install",
        "meshapi.Link",
        "meshapi.Sector",
    ],
    # This breaks tests, and our write volumes are so low that this performance
    # impact should be negligible (it's an extra DB call on any model change)
    # If this is a problem in the future, look into setting this only during testing
    USE_CACHE=False,
)
